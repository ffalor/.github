{
  "editor.renderWhitespace": "none",
  "editor.inlineSuggest.enabled": true,
  "github.copilot.enable": {
    "*": true,
    "plaintext": true,
    "markdown": true,
    "yaml": true,
    "python": true,
    "go": true
  },
  "git.autofetch": true,
  "yaml.customTags": [
    "!And",
    "!And sequence",
    "!If",
    "!If sequence",
    "!Not",
    "!Not sequence",
    "!Equals",
    "!Equals sequence",
    "!Or",
    "!Or sequence",
    "!FindInMap",
    "!FindInMap sequence",
    "!Base64",
    "!Join",
    "!Join sequence",
    "!Cidr",
    "!Ref",
    "!Sub",
    "!Sub sequence",
    "!GetAtt",
    "!GetAZs",
    "!ImportValue",
    "!ImportValue sequence",
    "!Select",
    "!Select sequence",
    "!Split",
    "!Split sequence"
  ],
  "git.confirmSync": false,
  "editor.tabSize": 2,
  "terminal.integrated.scrollback": 250000000,
  "workbench.colorTheme": "GitHub Dark High Contrast",
  "editor.linkedEditing": true,
  "editor.formatOnSave": true,
  "editor.suggest.insertMode": "replace",
  // GO Config
  "go.lintTool": "golangci-lint",
  "go.lintFlags": [
    "--fast"
  ],
  "go.toolsManagement.autoUpdate": true,
  "window.zoomLevel": 0.5,
  "workbench.statusBar.visible": true,
  "editor.minimap.enabled": false,
  "breadcrumbs.enabled": false,
  "workbench.activityBar.visible": false,
  "zenMode.hideLineNumbers": false,
  "zenMode.hideTabs": false,
  "editor.lineNumbers": "relative",
  // VIM
  "vim.neovimPath": "/usr/local/bin/nvim",
  "vim.cursorStylePerMode.insert": "line-thin",
  "vim.cursorStylePerMode.normal": "block",
  "vim.cursorStylePerMode.visual": "underline-thin",
  "vim.foldfix": true,
  "vim.showMarksInGutter": true,
  "vim.sneak": true,
  "vim.sneakReplacesF": true,
  "vim.statusBarColorControl": true,
  "vim.surround": true,
  "vim.useSystemClipboard": true,
  "vim.leader": "<Space>",
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-d>": true,
    "<C-s>": false,
    "<C-z>": false
  },
  // TODO Implement C HJKL to allow nav inside insert mode
  "vim.normalModeKeyBindingsNonRecursive": [
    // buffer split
    {
      "before": [
        "leader",
        "v"
      ],
      "commands": [
        ":vsplit"
      ]
    },
    {
      "before": [
        "leader",
        "s"
      ],
      "commands": [
        ":split"
      ]
    },
    // panes
    {
      "before": [
        "leader",
        "h"
      ],
      "commands": [
        "workbench.action.focusLeftGroup"
      ]
    },
    {
      "before": [
        "leader",
        "j"
      ],
      "commands": [
        "workbench.action.focusBelowGroup"
      ]
    },
    {
      "before": [
        "leader",
        "k"
      ],
      "commands": [
        "workbench.action.focusAboveGroup"
      ]
    },
    {
      "before": [
        "leader",
        "l"
      ],
      "commands": [
        "workbench.action.focusRightGroup"
      ]
    },
    // quit, close, write buffer
    {
      "before": [
        "leader",
        "w"
      ],
      "commands": [
        ":w!"
      ]
    },
    {
      "before": [
        "leader",
        "q"
      ],
      "commands": [
        ":q!"
      ]
    },
    {
      "before": [
        "leader",
        "x"
      ],
      "commands": [
        ":x!"
      ]
    },
    {
      "before": [
        "g",
        "h"
      ],
      "commands": [
        "editor.action.showDefinitionPreviewHover"
      ]
    },
    {
      "before": [
        "leader",
        "f"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      "before": [
        "leader",
        "p"
      ],
      "commands": [
        "editor.action.formatDocument"
      ]
    },
    {
      "before": [
        "d"
      ],
      "after": [
        "\"",
        "_",
        "d"
      ]
    },
    // // toggle comment selection
    {
      "before": [
        "leader",
        "c"
      ],
      "commands": [
        "editor.action.commentLine"
      ]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [
        "d"
      ],
      "after": [
        "\"",
        "_",
        "d"
      ]
    },
    // Stay in visual mode while indenting
    {
      "before": [
        "<"
      ],
      "commands": [
        "editor.action.outdentLines"
      ]
    },
    {
      "before": [
        ">"
      ],
      "commands": [
        "editor.action.indentLines"
      ]
    },
    {
      "before": [
        "J"
      ],
      "commands": [
        "editor.action.moveLinesDownAction"
      ]
    },
    {
      "before": [
        "K"
      ],
      "commands": [
        "editor.action.moveLinesUpAction"
      ]
    },
    {
      "before": [
        "leader",
        "c"
      ],
      "commands": [
        "editor.action.commentLine"
      ]
    }
  ],
  // PYTHON Config
  "python.analysis.autoImportCompletions": true,
  "python.analysis.autoImportUserSymbols": true,
  "python.analysis.completeFunctionParens": true,
  "python.linting.pylintEnabled": true,
  "ansible.ansible.reuseTerminal": true,
  "editor.formatOnPaste": true,
  "editor.definitionLinkOpensInPeek": true,
  "markdown-preview-github-styles.darkTheme": "light",
  "markdown-preview-github-styles.colorTheme": "light",
  "editor.fontFamily": "Hack Nerd Font Mono, Menlo, Monaco, 'Courier New', monospac",
  "editor.fontSize": 14,
  "python.languageServer": "Pylance",
  "python.analysis.typeCheckingMode": "basic",
  "git.openRepositoryInParentFolders": "never",
  "git.enableSmartCommit": true,
  "scm.defaultViewMode": "tree",
  "settingsSync.ignoredExtensions": [
    "github.copilot",
    "github.copilot-labs"
  ],
  "workbench.colorCustomizations": {
    "statusBar.background": "#005f5f",
    "statusBar.noFolderBackground": "#005f5f",
    "statusBar.debuggingBackground": "#005f5f"
  },
  "workbench.startupEditor": "none",
}